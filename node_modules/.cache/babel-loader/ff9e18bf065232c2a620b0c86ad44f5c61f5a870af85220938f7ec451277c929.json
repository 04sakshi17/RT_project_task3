{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\saksh\\\\OneDrive\\\\Desktop\\\\task\\\\Chapter3\\\\chapter3\\\\src\\\\pages\\\\Board\\\\Board.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport Lane from '../../components/Lane/Lane';\nimport './Board.css';\nimport useDataFetching from '../../hooks/useDataFetching';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst lanes = [{\n  id: 1,\n  title: 'To Do'\n}, {\n  id: 2,\n  title: 'In Progress'\n}, {\n  id: 3,\n  title: 'Review'\n}, {\n  id: 4,\n  title: 'Done'\n}];\nfunction Board() {\n  _s();\n  const [loading, error, data] = useDataFetching(`https://my-json-server.typicode.com/PacktPublishing/React-Projects-Second-Edition/tasks`);\n  const [tasks, setTasks] = useState([]);\n  useEffect(() => {\n    setTasks(data);\n  }, [data]);\n  function onDragStart(e, id) {\n    e.dataTransfer.setData('id', id);\n  }\n  function onDragOver(e) {\n    e.preventDefault();\n  }\n  ;\n  function onDrop(e, laneId) {\n    const id = e.dataTransfer.getData('id');\n    const updatedTasks = tasks.filter(task => {\n      if (task.id.toString() === id) {\n        task.lane = laneId;\n      }\n      return task;\n    });\n    setTasks(updatedTasks);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Board-wrapper\",\n    children: lanes.map(lane => /*#__PURE__*/_jsxDEV(Lane, {\n      laneId: lane.id,\n      title: lane.title,\n      loading: loading,\n      error: error,\n      tasks: tasks.filter(task => task.lane === lane.id),\n      onDragStart: onDragStart,\n      onDragOver: onDragOver,\n      onDrop: onDrop\n    }, lane.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 1\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 1\n  }, this);\n}\n_s(Board, \"3q/aTBDaro2wvCKFzajzO+qIV2Q=\", false, function () {\n  return [useDataFetching];\n});\n_c = Board;\nexport default Board;\nvar _c;\n$RefreshReg$(_c, \"Board\");","map":{"version":3,"names":["useState","useEffect","Lane","useDataFetching","jsxDEV","_jsxDEV","lanes","id","title","Board","_s","loading","error","data","tasks","setTasks","onDragStart","e","dataTransfer","setData","onDragOver","preventDefault","onDrop","laneId","getData","updatedTasks","filter","task","toString","lane","className","children","map","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/saksh/OneDrive/Desktop/task/Chapter3/chapter3/src/pages/Board/Board.js"],"sourcesContent":["import {useState, useEffect } from 'react';\r\nimport Lane from '../../components/Lane/Lane';\r\nimport './Board.css';\r\nimport useDataFetching from '../../hooks/useDataFetching';\r\nconst lanes = [\r\n    { id: 1, title: 'To Do' },\r\n    { id: 2, title: 'In Progress' },\r\n    { id: 3, title: 'Review' },\r\n    { id: 4, title: 'Done' },\r\n  ];\r\nfunction Board(){\r\n const [loading, error,data] =useDataFetching(`https://my-json-server.typicode.com/PacktPublishing/React-Projects-Second-Edition/tasks`);\r\n const [tasks, setTasks] = useState([]);\r\n useEffect(() => {\r\n setTasks(data);\r\n },[data]);\r\n\r\n\r\nfunction onDragStart(e, id) {\r\ne.dataTransfer.setData('id', id);\r\n}\r\n function onDragOver(e) {\r\n e.preventDefault();\r\n };\r\n function onDrop(e, laneId) {\r\n const id = e.dataTransfer.getData('id');\r\n const updatedTasks = tasks.filter((task) => {\r\n if (task.id.toString() === id) {\r\n task.lane = laneId;\r\n }\r\n return task;\r\n });\r\n setTasks(updatedTasks);\r\n }\r\nreturn (\r\n\r\n<div className='Board-wrapper'>\r\n{lanes.map((lane) => (\r\n<Lane\r\nkey={lane.id}\r\nlaneId={lane.id}\r\ntitle={lane.title}\r\n loading={loading}\r\n error={error}\r\n tasks={tasks.filter((task) =>\r\ntask.lane === lane.id)}\r\nonDragStart={onDragStart}\r\n onDragOver={onDragOver}\r\n onDrop={onDrop}\r\n/>\r\n))}\r\n</div>\r\n);\r\n}\r\nexport default Board;\r\n "],"mappings":";;AAAA,SAAQA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC1C,OAAOC,IAAI,MAAM,4BAA4B;AAC7C,OAAO,aAAa;AACpB,OAAOC,eAAe,MAAM,6BAA6B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAC1D,MAAMC,KAAK,GAAG,CACV;EAAEC,EAAE,EAAE,CAAC;EAAEC,KAAK,EAAE;AAAQ,CAAC,EACzB;EAAED,EAAE,EAAE,CAAC;EAAEC,KAAK,EAAE;AAAc,CAAC,EAC/B;EAAED,EAAE,EAAE,CAAC;EAAEC,KAAK,EAAE;AAAS,CAAC,EAC1B;EAAED,EAAE,EAAE,CAAC;EAAEC,KAAK,EAAE;AAAO,CAAC,CACzB;AACH,SAASC,KAAKA,CAAA,EAAE;EAAAC,EAAA;EACf,MAAM,CAACC,OAAO,EAAEC,KAAK,EAACC,IAAI,CAAC,GAAEV,eAAe,CAAE,yFAAwF,CAAC;EACvI,MAAM,CAACW,KAAK,EAAEC,QAAQ,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EACtCC,SAAS,CAAC,MAAM;IAChBc,QAAQ,CAACF,IAAI,CAAC;EACd,CAAC,EAAC,CAACA,IAAI,CAAC,CAAC;EAGV,SAASG,WAAWA,CAACC,CAAC,EAAEV,EAAE,EAAE;IAC5BU,CAAC,CAACC,YAAY,CAACC,OAAO,CAAC,IAAI,EAAEZ,EAAE,CAAC;EAChC;EACC,SAASa,UAAUA,CAACH,CAAC,EAAE;IACvBA,CAAC,CAACI,cAAc,CAAC,CAAC;EAClB;EAAC;EACD,SAASC,MAAMA,CAACL,CAAC,EAAEM,MAAM,EAAE;IAC3B,MAAMhB,EAAE,GAAGU,CAAC,CAACC,YAAY,CAACM,OAAO,CAAC,IAAI,CAAC;IACvC,MAAMC,YAAY,GAAGX,KAAK,CAACY,MAAM,CAAEC,IAAI,IAAK;MAC5C,IAAIA,IAAI,CAACpB,EAAE,CAACqB,QAAQ,CAAC,CAAC,KAAKrB,EAAE,EAAE;QAC/BoB,IAAI,CAACE,IAAI,GAAGN,MAAM;MAClB;MACA,OAAOI,IAAI;IACX,CAAC,CAAC;IACFZ,QAAQ,CAACU,YAAY,CAAC;EACtB;EACD,oBAEApB,OAAA;IAAKyB,SAAS,EAAC,eAAe;IAAAC,QAAA,EAC7BzB,KAAK,CAAC0B,GAAG,CAAEH,IAAI,iBAChBxB,OAAA,CAACH,IAAI;MAELqB,MAAM,EAAEM,IAAI,CAACtB,EAAG;MAChBC,KAAK,EAAEqB,IAAI,CAACrB,KAAM;MACjBG,OAAO,EAAEA,OAAQ;MACjBC,KAAK,EAAEA,KAAM;MACbE,KAAK,EAAEA,KAAK,CAACY,MAAM,CAAEC,IAAI,IAC1BA,IAAI,CAACE,IAAI,KAAKA,IAAI,CAACtB,EAAE,CAAE;MACvBS,WAAW,EAAEA,WAAY;MACxBI,UAAU,EAAEA,UAAW;MACvBE,MAAM,EAAEA;IAAO,GATXO,IAAI,CAACtB,EAAE;MAAA0B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAUX,CACA;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACG,CAAC;AAEN;AAAC1B,EAAA,CA3CQD,KAAK;EAAA,QACgBN,eAAe;AAAA;AAAAkC,EAAA,GADpC5B,KAAK;AA4Cd,eAAeA,KAAK;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}